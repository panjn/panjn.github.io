{"pages":[],"posts":[{"title":"58同城的技术架构","text":"单机系统Windows全家桶 Windows + IIS + SQL Server + C-Sharp —— 面向问题编程","link":"/pages/58-arch/"},{"title":"大数据技术综述","text":"本文为对2014年的大数据技术综述论文《Big Data: A Survey》的翻译，论文作者为 Min Chen、Shiwen Mao和Yunhao Liu","link":"/pages/big-data-survey/"},{"title":"斗鱼的技术架构","text":"业务后台架构早期架构 (2014) 单体应用 Nginx+PHP+Memcached+MySQL 问题：粉丝收到大主播开播信息后，涌入直播间，获取直播间信息等。Memcache采用一致性哈希，同一个直播间的缓存key落在了同一个Memcachd节点，会造成改节点负载过高。 另外，如果Memcached此时没有该直播间信息的缓存，此时大量的并发请求会到达MySQL(缓存击穿)","link":"/pages/douyu-arch/"},{"title":"百度的在离线混部技术","text":"【百度云原生导读】服务器资源利用率较低，TCO(IT 基础设施的总拥有成本)逐年上涨，对于拥有大量机器资源的公司来说无疑是一个头疼的问题。 混部技术就是在这种情况下应运而生，目前，混部技术在业界还属于比较小众的领域，只有一些资源量级较大的公司在研究、发展混部技术，以期获得收益。 对于百度而言，通过应用混部技术，主混部集群数十万台，提升CPU利用率到40+%，累计节约了数十亿人民币。目前百度容器引擎产品 CCE 已支持在离线混部，并完成了大规模业务落地，本文将带大家深入了解百度的在离线混部技术。","link":"/pages/hybrid-deploy-baidu/"},{"title":"字节跳动的在离线混部技术","text":"5 月 30 日，字节跳动技术沙龙 | 基础架构专场 进行了在线直播。我们邀请到了字节跳动基础架构团队资深研发工程师邵伟、江帆和大家进行分享交流。 本次沙龙给大家分享的主题是《大规模混合部署项目在字节跳动的落地实践》，希望这次的分享能够带给大家一些我们对混部的思考。 沙龙分享的内容将会围绕以下问题来进行： 首先是字节跳动为什么想要开启混部，它产生的背景是什么样的，字节内部的业务形态有什么样的特征使我们能够开启大规模的混部？ 我们具体做了哪些事情来支持混部的顺利开启和落地，在其中遇到哪些问题和挑战？ 以及，在字节内部，混部有哪些典型的应用场景，分别是为了解决什么问题，带来了哪些收益等等。","link":"/pages/hybrid-deploy-bytedance/"},{"title":"腾讯Caelus—全场景在离线混部","text":"引言: 集群管理的一个重要目标是提高资源利用率，随着集群规模的扩大，基础设施成本上涨，资源利用率问题逐步突显，为降低成本，混部技术应运而生。本篇文章结合腾讯技术团队在混部方面的落地和实战经验，来介绍各类场景下在线离线混部的相关概念、面临的问题及混部技术方案，抛砖引玉，供大家交流。","link":"/pages/hybrid-deploy-tx/"},{"title":"腾讯：如何提升Kubernetes集群资源利用率","text":"王孝威，腾讯云容器产品经理，热衷于为客户提供高效的 Kubernetes 使用方式，为客户极致降本增效服务。 晏子怡，腾讯云容器产品经理，在Kubernetes 弹性伸缩、资源高效利用领域有丰富的实战经验。 背景公有云的发展为业务的稳定性、可拓展性、便利性带来了极大帮助。这种用租代替买、并且提供完善的技术支持和保障的服务，理应为业务带来降本增效的效果。但实际上业务上云并不意味着成本一定减少，还需适配云上业务的应用开发、架构设计、管理运维、合理使用等多方面解决方案，才能真正助力业务的降本增效。在《Kubernetes 降本增效标准指南》系列的上一篇文章《容器化计算资源利用率现象剖析》中可看到，IDC 上云后资源利用率提高有限，即使已经容器化，节点的平均利用率依旧仅在 13% 左右，资源利用率的提升任重道远。 本篇文章将带你了解：为什么 Kubernetes 集群中的 CPU 和内存资源利用率 通常都如此之低？现阶段在 TKE 上面有哪些产品化的方法可以轻松提升资源利用率？","link":"/pages/k8s-resource-utils-tx/"},{"title":"一文了解Knative流量机制","text":"自动扩缩容是 Serverless 的核心特征，更好、更快的冷启动是所有 Serverless 平台的极致追求，本文基于网易杭州研究院云计算团队的探索，针对热门 Serverless 平台 Knative，解析其与自动扩容密切相关的流量实现机制，希望能够帮助从业者更好地理解 Knative autoscale 功能。","link":"/pages/knative-traffic/"},{"title":"Pinterest的技术架构","text":"本文来自QCon","link":"/pages/pinterest-arch/"},{"title":"不知道做啥？看下那些真实业务场景下的技术问题","text":"","link":"/pages/problems/"},{"title":"(云计算) 如何解决Serverless函数冷启动的问题？","text":"背景 如果你的PaaS能够有效地在20毫秒内启动实例并运行半秒,那么就可以称之为Serverless。 —— AWS云架构战略副总裁Adrian Cockcroft1 Serverless的最大卖点之一就是在做弹性伸缩时可以将实例数缩到0，没流量时不花钱，有流量来时再扩容。然而理想很丰满，现实很骨感。 无论是在流量刚到达时实例数从0到1，还是为了处理更多的流量将实例数从m扩到n的过程，不得不面对的一个问题就是：冷启动。冷启动时间太长， 就会出现请求超时。","link":"/pages/serverless-coldstart/"},{"title":"Serverless 距离大规模应用还有多远？从冷启动说起","text":"Techo TVP开发者峰会 ServerlessDays China 2021 的压轴环节是圆桌对话，首次齐聚 AWS、阿里云、字节跳动等全球 TOP 云厂商和互联网企业，深入探讨 Serverless 当前现状、发展趋势，并针对具体挑战和应对举措进行深度交流。本文是对本次圆桌论坛《聚焦当下，重构未来：Serverless 全球视野碰撞》的分享整理，希望带大家从更加全面的视角了解 Serverless 的价值、使用场景和收益，共同促进 Serverless 在中国的探索和落地。","link":"/pages/serverless-talk/"},{"title":"(智能运维) 如何对监控指标做异常检测？","text":"背景参考链接 腾讯 织云Metis时间序列异常检测全方位解析 美团 外卖订单量预测异常报警模型实践 滴滴 滴滴出行海量数据场景下的智能监控与故障定位实践","link":"/pages/ts-anomaly-detection/"},{"title":"Twitter的技术架构","text":"背景2013年时推文的TPS2013年8月3日星期六，人们观看了《天空之城》的播出，Twiiter当时推文的TPS峰值达到了：每秒 143,199 条推文","link":"/pages/twitter-arch/"},{"title":"微博的技术架构","text":"背景 每条微博，在技术上也被称为status或feed. 微博中的关注页是一个feed流，聚合了自己关注了的人的微博。","link":"/pages/weibo-arch/"},{"title":"微信的技术架构","text":"","link":"/pages/weixin-arch/"},{"title":"一文了解CDN加速原理","text":"CDN（Content Delivery Network，内容分发网络）是构建在现有互联网基础之上的一层智能虚拟网络，通过在网络各处部署节点服务器，实现将源站内容分发至所有CDN节点，使用户可以就近获得所需的内容。CDN服务缩短了用户查看内容的访问延迟，提高了用户访问网站的响应速度与网站的可用性，解决了网络带宽小、用户访问量大、网点分布不均等问题。","link":"/pages/wiki-cdn/"},{"title":"一文了解Service Mesh","text":"服务网格是一个基础设施层，用于处理服务间通信。云原生应用有着复杂的服务拓扑，服务网格保证请求在这些拓扑中可靠地穿梭。在实际应用当中，服务网格通常是由一系列轻量级的网络代理组成的，它们与应用程序部署在一起，但对应用程序透明。 Service Mesh具有如下优点： 屏蔽分布式系统通信的复杂性(负载均衡、服务发现、认证授权、监控追踪、流量控制等等)，服务只用关注业务逻辑； 真正的语言无关，服务可以用任何语言编写，只需和Service Mesh通信即可； 对应用透明，Service Mesh组件可以单独升级；","link":"/pages/wiki-service-mesh/"},{"title":"一文了解Paxos","text":"背景 分布式系统中, 其中一个基础的问题是如何在不可靠硬件(低可用性)基础上构建可靠(高可用性)的服务, 要达成这个目标, 核心的手段就是复制(例如一份数据存3个副本). 而复制过程中的一致性问题, 最后都归结为Paxos的解决方案2 Paxos","link":"/pages/wiki-paxos/"},{"title":"一文了解文件系统的发展：从单机到分布式","text":"本文为英文","link":"/pages/wiki-dev-of-file-system/"},{"title":"知乎的技术架构","text":"Timeline架构演进这里的Timeline是指按时间排列的用户的动态（关注了问题，赞同了回答，发表回答等），","link":"/pages/zhihu-arch/"}],"tags":[{"name":"大数据","slug":"大数据","link":"/tags/%E5%A4%A7%E6%95%B0%E6%8D%AE/"},{"name":"在离线混部","slug":"在离线混部","link":"/tags/%E5%9C%A8%E7%A6%BB%E7%BA%BF%E6%B7%B7%E9%83%A8/"},{"name":"Kubernetes","slug":"Kubernetes","link":"/tags/Kubernetes/"},{"name":"Serverless","slug":"Serverless","link":"/tags/Serverless/"},{"name":"Knative","slug":"Knative","link":"/tags/Knative/"},{"name":"智能运维","slug":"智能运维","link":"/tags/%E6%99%BA%E8%83%BD%E8%BF%90%E7%BB%B4/"},{"name":"feed服务","slug":"feed服务","link":"/tags/feed%E6%9C%8D%E5%8A%A1/"},{"name":"分布式一致性","slug":"分布式一致性","link":"/tags/%E5%88%86%E5%B8%83%E5%BC%8F%E4%B8%80%E8%87%B4%E6%80%A7/"}],"categories":[{"name":"技术架构","slug":"技术架构","link":"/categories/%E6%8A%80%E6%9C%AF%E6%9E%B6%E6%9E%84/"},{"name":"综述","slug":"综述","link":"/categories/%E7%BB%BC%E8%BF%B0/"},{"name":"一文了解","slug":"一文了解","link":"/categories/%E4%B8%80%E6%96%87%E4%BA%86%E8%A7%A3/"},{"name":"问题","slug":"问题","link":"/categories/%E9%97%AE%E9%A2%98/"}]}